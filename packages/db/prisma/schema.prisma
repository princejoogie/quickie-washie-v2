// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  privilege    Privilege     @default(CUSTOMER)
  email        String        @unique
  password     String
  licenseUrl   String
  name         String
  photoUrl     String?
  vehicles     Vehicle[]
  appointments Appointment[]
}

model Vehicle {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  plateNumber  String        @db.VarChar()
  model        String        @db.VarChar()
  type         VehicleType
  userId       String?
  appointments Appointment[]

  User User? @relation(fields: [userId], references: [id], onDelete: SetNull)
}

model AdditionalPrice {
  id          String      @id @default(cuid())
  price       Decimal     @db.Decimal(10, 2)
  vehicleType VehicleType
  serviceId   String?

  Service     Service?      @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  Appointment Appointment[]
}

model Service {
  id               String            @id @default(cuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  name             String
  basePrice        Decimal           @db.Decimal(10, 2)
  description      String
  additionalPrices AdditionalPrice[]
  appointments     Appointment[]
}

model Appointment {
  id                String            @id @default(cuid())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  date              DateTime          @default(now())
  status            AppointmentStatus @default(PENDING)
  userId            String?
  vehicleId         String?
  serviceId         String?
  additionalPriceId String?

  Vehicle         Vehicle?         @relation(fields: [vehicleId], references: [id], onDelete: SetNull)
  User            User?            @relation(fields: [userId], references: [id], onDelete: SetNull)
  Service         Service?         @relation(fields: [serviceId], references: [id], onDelete: SetNull)
  AdditionalPrice AdditionalPrice? @relation(fields: [additionalPriceId], references: [id], onDelete: SetNull)
}

enum AppointmentStatus {
  PENDING
  ONGOING
  FINISHED
  CANCELLED
}

enum Privilege {
  ADMIN
  CUSTOMER
}

enum VehicleType {
  CONVERTIBLE
  HATCHBACK
  MINIVAN
  PICKUP_TRUCK
  SEDAN_2_DOOR
  SEDAN_4_DOOR
  SPORTS_CAR
  STATION_WAGON
  SUV
}
